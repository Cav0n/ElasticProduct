{
  "analyzer": {
    "english_index": {
      "tokenizer": "index_tokenizer",
      "filter": [
        "lowercase",
        "icu_folding",
        "stop_en"
      ],
      "char_filter": [
        "hyphen_replace",
        "html_strip"
      ]
    },
    "english_search": {
      "tokenizer": "whitespace",
      "filter": [
        "lowercase",
        "icu_folding",
        "stop_en"
      ],
      "char_filter": [
        "hyphen_replace",
        "html_strip"
      ]
    },
    "french_index": {
      "tokenizer": "index_tokenizer",
      "filter": [
        "french_elision",
        "icu_folding",
        "lowercase",
        "stop_fr"
      ],
      "char_filter": [
        "hyphen_replace",
        "html_strip"
      ]
    },
    "french_search": {
      "tokenizer": "whitespace",
      "filter": [
        "french_elision",
        "icu_folding",
        "lowercase",
        "stop_fr"
      ],
      "char_filter": [
        "hyphen_replace",
        "html_strip"
      ]
    },
    "german_index": {
      "tokenizer": "index_tokenizer",
      "filter": [
        "icu_folding",
        "lowercase",
        "stop_de"
      ],
      "char_filter": [
        "hyphen_replace",
        "html_strip"
      ]
    },
    "german_search": {
      "tokenizer": "whitespace",
      "filter": [
        "icu_folding",
        "lowercase",
        "stop_de"
      ],
      "char_filter": [
        "hyphen_replace",
        "html_strip"
      ]
    }
  },
  "tokenizer": {
    "index_tokenizer": {
      "type": "edge_ngram",
      "min_gram": 2,
      "max_gram": 20,
      "token_chars": [
        "letter",
        "symbol",
        "punctuation"
      ]
    }
  },
  "filter": {
    "stop_fr": {
      "type": "stop",
      "stopwords": "_french_"
    },
    "stop_en": {
      "type": "stop",
      "stopwords": "_english_"
    },
    "stop_de": {
      "type": "stop",
      "stopwords": "_german_"
    },
    "french_elision": {
      "type": "elision",
      "articles_case": true,
      "articles": [
        "l",
        "m",
        "t",
        "qu",
        "n",
        "s",
        "j",
        "d",
        "c",
        "jusqu",
        "quoiqu",
        "lorsqu",
        "puisqu"
      ]
    }
  },
  "char_filter": {
    "hyphen_replace": {
      "type": "mapping",
      "mappings": [
        "- => $",
        "/ => $"
      ]
    }
  },
  "normalizer": {
    "lowerasciinormalizer": {
      "type": "custom",
      "filter": [
        "lowercase",
        "asciifolding"
      ]
    }
  }
}